trigger:
  - master

resources:
  - repo: self

variables:
  - group: public-npm
  - name: vmImageName
    value: "ubuntu-latest"
  - name: envName
    value: "brandup-ui"
  - name: version-major
    value: "2"
  - name: version-minor
    value: "2"

name: $(version-major).$(version-minor).$(rev:r)

pool:
  vmImage: $(vmImageName)

stages:
  - stage: "Build"
    displayName: "Build"
    jobs:
      - job: "BuildNpm"
        displayName: "Build NPM"
        pool:
          vmImage: $(vmImageName)
          workspace:
            clean: all
        steps:
          - script: |
              echo "Begin build!"
              echo "build number - $(Build.BuildNumber)"
            displayName: "print variables"

          - checkout: self
            clean: "true"
            persistCredentials: "true"

          - task: "Npm@1"
            displayName: "root npm install"
            inputs:
              command: "install"

          - task: "Npm@1"
            displayName: "packages npm install"
            inputs:
              command: "custom"
              customCommand: "run npm:install"

          - task: "Npm@1"
            displayName: "packages npm build"
            inputs:
              command: "custom"
              customCommand: "run npm:build"

          - task: "Npm@1"
            displayName: "packages npm version"
            inputs:
              command: "custom"
              customCommand: "run npm:version $(Build.BuildNumber)"

          - task: "Npm@1"
            displayName: "packages npm pack"
            inputs:
              command: custom
              customCommand: "run npm:pack --pack-destination $(Build.ArtifactStagingDirectory)"

          - publish: $(Build.ArtifactStagingDirectory)
            displayName: publish artifact
            condition: succeededOrFailed()
            artifact: npm

      - job: GitTag
        displayName: "Add git tag"
        dependsOn: [BuildNpm]
        condition: succeeded()
        steps:
          - checkout: self
            clean: "true"
            persistCredentials: "true"

          - pwsh: |
              git config --global user.name "AzureDevOps Agent"
              git tag "$(Build.BuildNumber)" --force
              git push origin "$(Build.BuildNumber)" --force
              Write-Output "Tagging $(Build.Repository.Name) with $(Build.BuildNumber)"
            displayName: set git tag

  - stage: Production
    displayName: Deploy stage
    dependsOn: Build
    jobs:
      - deployment: Production
        condition: succeeded()
        displayName: "NPM"
        pool:
          vmImage: $(vmImageName)
        environment: $(envName)
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  displayName: "download artifacts"
                  artifact: npm

                - task: ExtractFiles@1
                  displayName: "unzip brandup-ui"
                  inputs:
                    archiveFilePatterns: "$(Pipeline.Workspace)/npm/brandup-ui-$(Build.BuildNumber).tgz"
                    destinationFolder: "$(Pipeline.Workspace)/npmout/brandup-ui"
                    cleanDestinationFolder: true
                    overwriteExistingFiles: true

                - task: ExtractFiles@1
                  displayName: "unzip brandup-ui-dom"
                  inputs:
                    archiveFilePatterns: "$(Pipeline.Workspace)/npm/brandup-ui-dom-$(Build.BuildNumber).tgz"
                    destinationFolder: "$(Pipeline.Workspace)/npmout/brandup-ui-dom"
                    cleanDestinationFolder: true
                    overwriteExistingFiles: true

                - task: ExtractFiles@1
                  displayName: "unzip brandup-ui-ajax"
                  inputs:
                    archiveFilePatterns: "$(Pipeline.Workspace)/npm/brandup-ui-ajax-$(Build.BuildNumber).tgz"
                    destinationFolder: "$(Pipeline.Workspace)/npmout/brandup-ui-ajax"
                    cleanDestinationFolder: true
                    overwriteExistingFiles: true

                - task: ExtractFiles@1
                  displayName: "unzip brandup-ui-helpers"
                  inputs:
                    archiveFilePatterns: "$(Pipeline.Workspace)/npm/brandup-ui-helpers-$(Build.BuildNumber).tgz"
                    destinationFolder: "$(Pipeline.Workspace)/npmout/brandup-ui-helpers"
                    cleanDestinationFolder: true
                    overwriteExistingFiles: true

                - task: ExtractFiles@1
                  displayName: "unzip brandup-ui-helpers"
                  inputs:
                    archiveFilePatterns: "$(Pipeline.Workspace)/npm/brandup-ui-app-$(Build.BuildNumber).tgz"
                    destinationFolder: "$(Pipeline.Workspace)/npmout/brandup-ui-app"
                    cleanDestinationFolder: true
                    overwriteExistingFiles: true

                # brandup-ui

                - task: Npm@1
                  displayName: "publish brandup-ui"
                  inputs:
                    command: publish
                    workingDir: "$(Pipeline.Workspace)/npmout/brandup-ui/package"
                    publishEndpoint: "$(publish-npm-credentials)"

                # brandup-ui-dom

                - task: Npm@1
                  displayName: "publish brandup-ui-dom"
                  inputs:
                    command: publish
                    workingDir: "$(Pipeline.Workspace)/npmout/brandup-ui-dom/package"
                    publishEndpoint: "$(publish-npm-credentials)"

                # brandup-ui-ajax

                - task: Npm@1
                  displayName: "publish brandup-ui-ajax"
                  inputs:
                    command: publish
                    workingDir: "$(Pipeline.Workspace)/npmout/brandup-ui-ajax/package"
                    publishEndpoint: "$(publish-npm-credentials)"

                # brandup-ui-helpers

                - task: Npm@1
                  displayName: "publish brandup-ui-helpers"
                  inputs:
                    command: publish
                    workingDir: "$(Pipeline.Workspace)/npmout/brandup-ui-helpers/package"
                    publishEndpoint: "$(publish-npm-credentials)"

                # brandup-ui-app

                - task: Npm@1
                  displayName: "publish brandup-ui-app"
                  inputs:
                    command: publish
                    workingDir: "$(Pipeline.Workspace)/npmout/brandup-ui-app/package"
                    publishEndpoint: "$(publish-npm-credentials)"
